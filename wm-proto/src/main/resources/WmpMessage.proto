syntax = "proto3";

package tutorial;

option java_package = "com.keepthinker.wavemessaging.proto";
option java_outer_classname = "WmpMessageProtos";

message WmpConnectMessageBody {
  string clientId = 1;
  string token = 2;
  string brokerAddress = 3;
}

message WmpConnAckMessageBody {
  string clientId = 1;
  WmpConnectReturnCode returnCode = 3;
}

enum WmpConnectReturnCode {
    ACCEPTED = 0;
    REFUSED_UNACCEPTABLE_PROTOCOL_VERSION  = 1;
    REFUSED_IDENTIFIER_REJECTED = 2;
    /** not login or error token */
    REFUSED_NOT_AUTHORIZED = 3;
    /** server is busy or not able to provide service*/
    REFUSED_SERVER_UNAVAILABLE = 4;
}

message WmpPublishMessageBody {
    int64 messageId = 1;
    string content = 2;
    /** clientId or topic name, if many elements, separated by coma(,) */
    string target = 3;
    /** one or many --> a clientId or a topic contains many clientIds */
    TargetType targetType = 4;
    /** message from where to where*/
    Direction direction = 5;
}

message WmpPubAckMessageBody {
    int64 messageId = 1;
    string clientId = 2;

}

/** a chat group or a client tag or other self defined group */
enum TargetType {
    /** one client */
    CLIENT_ID = 0;
    TOPIC_GENERAL = 1;
}

enum Direction {
    /** message going to client sdk */
    TO_CLIENT_SDK = 0;
    /** message going to handler */
    TO_SERVER_HANDLER = 1;
}

message WmpDisConnectMessageBody {
    string clientId = 1;
}